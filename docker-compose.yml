services:
  redpanda:
    image: redpandadata/redpanda:v25.2.9
    container_name: redpanda
    command:
      - redpanda
      - start
      - --overprovisioned
      - --node-id=0
      - --smp=1
      - --memory=512M
      - --reserve-memory=0M
      - --check=false
      - --set redpanda.enable_transactions=true
      - --kafka-addr=PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:19092
      - --advertise-kafka-addr=PLAINTEXT://redpanda:9092,PLAINTEXT_HOST://localhost:19092
    ports:
      - "19092:19092"
      - "9644:9644"
    healthcheck:
      test: ["CMD", "bash", "-c", "rpk cluster info --brokers=redpanda:9092 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
  redpanda-console:
    image: redpandadata/console:v3.2.2
    container_name: redpanda-console
    depends_on:
      redpanda:
        condition: service_healthy
    environment:
      KAFKA_BROKERS: redpanda:9092
    ports:
      - "8087:8080"

  wiremock:
    image: wiremock/wiremock:2.35.0
    ports:
      - "8089:8080"
    volumes:
      - ./wiremock/mappings:/home/wiremock/mappings
      - ./wiremock/__files:/home/wiremock/__files
    command: ["--verbose", "--global-response-templating"]

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: insurance_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 5s
      retries: 10

  insurance-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: insurance-policy-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      TZ: UTC
    ports:
      - "8080:8080"
    depends_on:
      redpanda:
        condition: service_healthy
      postgres:
        condition: service_healthy
      wiremock:
        condition: service_started

volumes:
  pgdata: